input {
   
	file {
		type => "tomcat_catalina"
		path => [ "/opt/tomcatstack-8.0.21-0/apache-tomcat/logs/catalina-daemon.out" ]
		codec => multiline {
			pattern => "(^\d+\serror)|(^.+Exception: .+)|(^\s+at .+)|(^\s+... \d+ more)|(^\s*Caused by:.+)"
			what => "previous"
		}
	}
	
	file {
        type => "tomcat_access"
        path => ["/opt/tomcatstack-8.0.21-0/apache-tomcat/logs/localhost_access_log.*.txt"]
    }
	file {
        type => "tomcat_manager"
        path => ["/opt/tomcatstack-8.0.21-0/apache-tomcat/logs/manager.*.log"]
    }
	file {
        type => "tomcat_localhost"
        path => ["/opt/tomcatstack-8.0.21-0/apache-tomcat/logs/localhost.*.log"]
    }
}
filter {
	if [type] == "tomcat_catalina" and [message] !~ /(.+)/ {
		drop { }
	}
	if [type] == "tomcat_catalina" and "multiline" in [tags] {
		grok {
			match => [ "message", "%{JAVASTACKTRACEPART}" ]
		}
	}
	
	if [type] == "tomcat_access" {
		grok {
			match => { "message" => "%{COMMONAPACHELOG}" }
		}
		#Use GeoIP Locate the IP geographical location
		geoip {
		  source => "clientip"
		  target => "geoip"
		  database => "/etc/logstash/GeoLiteCity.dat"
		  add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
		  add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
		}
		mutate {
		  convert => [ "[geoip][coordinates]", "float"]
		}
		date {
			match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
		}
	}
}
