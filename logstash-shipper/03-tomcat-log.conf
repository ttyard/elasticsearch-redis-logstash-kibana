input {
    file {
        type => "tomcat_catalina"
        path => ["/opt/tomcatstack-7.0.61-0/apache-tomcat/logs/catalina.*.log"]
        sincedb_path => "/dev/null"
        start_position => "beginning"
    }
	
	file {
        type => "tomcat_access"
        path => ["/opt/tomcatstack-7.0.61-0/apache-tomcat/logs/localhost_access_log.*.txt"]
        sincedb_path => "/dev/null"
        start_position => "beginning"
    }
}
filter {
    if [type] == "tomcat_catalina" {		
        multiline {
            patterns_dir => "/opt/logstash/patterns"
            pattern => "(^%{TOMCAT_DATESTAMP})|(^%{CATALINA_DATESTAMP})"
			negate => true
			what => "previous"
        }
        if "_grokparsefailure" in [tags] {
            drop { }
        }
        grok {
            patterns_dir => "/opt/logstash/patterns"
            match => [ "message", "%{TOMCATLOG}", "message", "%{CATALINALOG}" ]
        }
		date {
            match => [ "timestamp", "yyyy-MM-dd HH:mm:ss,SSS Z", "MMM dd, yyyy HH:mm:ss a" ]
        }		
    }
	if [type] == "tomcat_access" {	
		grok {
			match => { "message" => "%{COMMONAPACHELOG}" }
		}
		#Use GeoIP Locate the IP geographical location
		geoip {
		  source => "clientip"
		  target => "geoip"
		  database => "/etc/logstash/GeoLiteCity.dat"
		  add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
		  add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
		}
		mutate {
		  convert => [ "[geoip][coordinates]", "float"]
		}
		date {
			match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
		}
	}	
}